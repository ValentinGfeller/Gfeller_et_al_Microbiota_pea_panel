---
title: "Differential abundance analysis fungal OTUs"
author: "Valentin Gfeller"
date: "`r Sys.Date()`"
output: 
  html_document: 
    toc: true
    toc_float: true
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
#global knitter option
knitr::opts_chunk$set(fig.align = "center", echo = FALSE)

# load packages
library(knitr); packageVersion("knitr")
library(tidyverse); packageVersion("tidyverse")
library(phyloseq); packageVersion("phyloseq")
library(vegan); packageVersion("vegan")
library(here); packageVersion("here")
library(readxl); packageVersion("readxl")
library(ggpubr); packageVersion("ggpubr")
library(ggbeeswarm); packageVersion("ggbeeswarm")
library(nlme); packageVersion("nlme")
library(lme4); packageVersion("lme4")
library(BiocParallel); packageVersion("BiocParallel")
library(UpSetR); packageVersion("UpSetR")
library(ggupset); packageVersion("ggupset")
library(cowplot); packageVersion("cowplot")

# functions were written for repeatedly used code (see "/Scripts/Functions.R")
# source functions
source(here("Scripts", "Functions.R"))

# set global option for ggplot2
theme_set(theme_bw(base_size = 12))
```

# Import data
```{r include=FALSE}
load(here("Data", "Interim", "phy.fun.all.RData"))

```

# Emergence
## DA on all data, phenotpes as continuous variable
```{r}
d.samp.aldex <- phy.fun.all %>% sample_data() %>% data.frame()
d.otu.aldex <- phy.fun.all %>% otu_table() %>% data.frame()

# # compute aldex.clr object
# set.seed(5070)
# estimates <- ALDEx2::aldex.clr(d.otu.aldex, denom = "all",
#                                conds = rep("cond",  ncol(d.otu.aldex)))
# 
# # takes long to compute --> save results
# corr.test_emergence <- ALDEx2::aldex.corr(estimates, d.samp.aldex$emergence)
# saveRDS(corr.test_emergence,
#         here("Data", "Interim", "DA_fun_corr_emergence_all.rds"))

corr.test <- readRDS(here("Data", "Interim", "DA_fun_corr_emergence_all.rds"))

# Check for differences between correlation methods 
corr.test %>% ggplot(aes(pearson.ecor, spearman.erho)) +
  geom_point(alpha = 0.6, size = 2) +
  geom_smooth(method = 'loess')

corr.test %>% ggplot(aes(pearson.ecor, kendall.etau)) +
  geom_point(alpha = 0.6, size = 2) +
  geom_smooth(method = 'loess')

corr.test %>% ggplot(aes(spearman.erho, kendall.etau)) +
  geom_point(alpha = 0.6, size = 2) +
  geom_smooth(method = 'loess')

# Use Spearman's rho, because we have ordinal data!!

# Tidy output
tab.otu <- data.frame(corr.test) %>% 
  mutate(OTU = row.names(corr.test)) %>% 
  select(OTU, everything()) %>% 
  arrange(spearman.erho) # sort taxa by Spearman's rho
da.otus <- subset(tab.otu, spearman.eBH < 0.05) ## significant OTUs at the 0.05 level (after correction)

# Add taxonomy
da.otus <- left_join(da.otus,
                     tax_table(phy.fun.all)[da.otus$OTU] %>%
                       data.frame() %>%
                       rownames_to_column("OTU"))

tab.da_otu_all_continuous_emerg <- tab.otu

# Check output
dim(da.otus)[1] # number of DA OTUs
da.otus[da.otus$spearman.erho < 0, "OTU"] %>% length() # number of "negative" OTUs
da.otus %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_min(order_by = spearman.erho, n = 10)
da.otus[da.otus$spearman.erho > 0, "OTU"] %>% length() # number of "positive" OTUs
da.otus %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_max(order_by = spearman.erho, n = 10)

# Plot
plot_heatmap(prune_taxa(da.otus$OTU, phy.fun.all), 
             taxa.order = da.otus$OTU,
             sample.order = "emergence", sample.label = "Emergence",
             "low" = "lightblue", "high" = "darkblue", na.value = "white") 

# Extract names of daOTUs
da.otu_all_continuous_emerg <- da.otus %>%  pull(OTU)

# Remove objects
rm(list = c("corr.test", "tab.otu", "da.otus", "estimates"))

```


# RRI (as other resistance phenotype)
## DA on all data, phenotpes as continuous variable
```{r}
load(here("Data", "Interim", "phy.fun.all.RData"))
d.samp.aldex <- phy.fun.all %>% sample_data() %>% data.frame()
d.otu.aldex <- phy.fun.all %>% otu_table() %>% data.frame()
d.otu.aldex[1:5, 1:5]

# # compute aldex.clr object
# set.seed(5070)
# estimates <- ALDEx2::aldex.clr(d.otu.aldex, denom = "all",
#                                conds = rep("cond",  ncol(d.otu.aldex)))
# 
# # takes long to compute --> save results
# corr.test_rri <- ALDEx2::aldex.corr(estimates, d.samp.aldex$RRI)
# warnings()
# saveRDS(corr.test_rri,
#         here("Data", "Interim", "DA_fun_corr_rri_all.rds"))

corr.test <- readRDS(here("Data", "Interim", "DA_fun_corr_rri_all.rds"))

# Tidy output (Use Spearman's rho, because we have ordinal data!!)
tab.otu <- data.frame(corr.test) %>% 
  mutate(OTU = row.names(corr.test)) %>% 
  select(OTU, everything()) %>% 
  arrange(spearman.erho) # sort taxa by Spearman's rho
da.otus <- subset(tab.otu, spearman.eBH < 0.05) ## significant OTUs at the 0.05 level (after correction)

# Add taxonomy
da.otus <- left_join(da.otus,
                     tax_table(phy.fun.all)[da.otus$OTU] %>%
                       data.frame() %>%
                       rownames_to_column("OTU"))

tab.da_otu_all_continuous_RRI <- tab.otu

# Check output
dim(da.otus)[1] # number of DA OTUs
da.otus[da.otus$spearman.erho > 0, "OTU"] %>% length() # number of "negative" OTUs
da.otus %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_max(order_by = spearman.erho, n = 10)
da.otus[da.otus$spearman.erho < 0, "OTU"] %>% length() # number of "positive" OTUs
da.otus %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_min(order_by = spearman.erho, n = 10)

# Plot
plot_heatmap(prune_taxa(da.otus$OTU, phy.fun.all), 
             taxa.order = da.otus$OTU,
             sample.order = "RRI",
             "low" = "lightblue", "high" = "darkblue", na.value = "white") 

# Extract names of daOTUs
da.otu_all_continuous_RRI <- da.otus %>%  pull(OTU)

# Remove objects
rm(list = c("corr.test_rri", "tab.otu", "da.otus", "estimates"))

```


# Relative dry weight
## DA on all data, phenotpes as continuous variable
```{r}
d.samp.aldex <- phy.fun.all %>% sample_data() %>% data.frame()
d.otu.aldex <- phy.fun.all %>% otu_table() %>% data.frame()
d.otu.aldex[1:5, 1:5]

# # compute aldex.clr object
# set.seed(5070)
# estimates <- ALDEx2::aldex.clr(d.otu.aldex, denom = "all",
#                                conds = rep("cond",  ncol(d.otu.aldex)))
# 
# # takes long to compute --> save results
# corr.test_shoot_dw_ratio_SNS <- ALDEx2::aldex.corr(estimates, d.samp.aldex$shoot_dw_ratio_SNS)
# warnings()
# saveRDS(corr.test_shoot_dw_ratio_SNS,
#         here("Data", "Interim", "DA_fun_corr_shoot_dw_ratio_SNS.rds"))

corr.test <- readRDS(here("Data", "Interim", "DA_fun_corr_shoot_dw_ratio_SNS.rds"))

# Tidy output
tab.otu <- data.frame(corr.test) %>% 
  mutate(OTU = row.names(corr.test)) %>% 
  select(OTU, everything()) %>% 
  arrange(spearman.erho) # sort taxa by Spearman's rho
da.otus <- subset(tab.otu, spearman.eBH < 0.05) ## significant OTUs at the 0.05 level (after correction)

# Add taxonomy
da.otus <- left_join(da.otus,
                     tax_table(phy.fun.all)[da.otus$OTU] %>%
                       data.frame() %>%
                       rownames_to_column("OTU"))

tab.da_otu_all_continuous_sdr <- tab.otu

# Check output
dim(da.otus)[1] # number of DA OTUs
da.otus[da.otus$spearman.erho < 0, "OTU"] %>% length() # number of "negative" OTUs
da.otus %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_min(order_by = spearman.erho, n = 10)
da.otus[da.otus$spearman.erho > 0, "OTU"] %>% length() # number of "positive" OTUs
da.otus %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_max(order_by = spearman.erho, n = 10)

# Plot
plot_heatmap(prune_taxa(da.otus$OTU, phy.fun.all), 
             taxa.order = da.otus$OTU,
             sample.order = "shoot_dw_ratio_SNS", sample.label = "shoot_dw_ratio_SNS",
             "low" = "lightblue", "high" = "darkblue", na.value = "white") 

# Extract names of daOTUs
da.otu_all_continuous_sdr <- da.otus %>%  pull(OTU)

# Remove objects
rm(list = c("corr.test", "tab.otu", "da.otus", "estimates"))

```


# Relative yield (per plot)
## DA on all data, phenotpes as continuous variable
```{r}
d.samp.aldex <- phy.fun.all %>% sample_data() %>% data.frame()
d.otu.aldex <- phy.fun.all %>% otu_table() %>% data.frame()
d.otu.aldex[1:5, 1:5]

# # compute aldex.clr object
# set.seed(5070)
# estimates <- ALDEx2::aldex.clr(d.otu.aldex, denom = "all",
#                                conds = rep("cond",  ncol(d.otu.aldex)))
# 
# # takes long to compute --> save results
# corr.test_yield_ratio_SNS <- ALDEx2::aldex.corr(estimates, d.samp.aldex$yield_ratio_SNS)
# warnings()
# saveRDS(corr.test_yield_ratio_SNS,
#         here("Data", "Interim", "DA_fun_corr_yield_ratio_SNS_all.rds"))
 
corr.test <- readRDS(here("Data", "Interim", "DA_fun_corr_yield_ratio_SNS_all.rds"))

# Tidy output
tab.otu <- data.frame(corr.test) %>% 
  mutate(OTU = row.names(corr.test)) %>% 
  select(OTU, everything()) %>% 
  arrange(spearman.erho) # sort taxa by Spearman's rho
da.otus <- subset(tab.otu, spearman.eBH < 0.05) ## significant OTUs at the 0.05 level (after correction)

# Add taxonomy
da.otus <- left_join(da.otus,
                     tax_table(phy.fun.all)[da.otus$OTU] %>%
                       data.frame() %>%
                       rownames_to_column("OTU"))

tab.da_otu_all_continuous_syr <- tab.otu

# Check output
dim(da.otus)[1] # number of DA OTUs
da.otus[da.otus$spearman.erho < 0, "OTU"] %>% length() # number of "negative" OTUs
da.otus %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_min(order_by = spearman.erho, n = 10)
da.otus[da.otus$spearman.erho > 0, "OTU"] %>% length() # number of "positive" OTUs
da.otus %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_max(order_by = spearman.erho, n = 10)

# Plot
plot_heatmap(prune_taxa(da.otus$OTU, phy.fun.all), 
             taxa.order = da.otus$OTU,
             sample.order = "yield_ratio_SNS", sample.label = "exp.id",
             "low" = "lightblue", "high" = "darkblue", na.value = "white") 


plot_heatmap(prune_samples(slice_sample(d.samp.aldex, n = 100) %>% rownames(), prune_taxa(da.otus$OTU, phy.fun.all)), 
             taxa.order = da.otus$OTU,
             sample.order = "yield_ratio_SNS", sample.label = "exp.id",
             "low" = "lightblue", "high" = "darkblue", na.value = "white") 

# Extract names of daOTUs
da.otu_all_continuous_syr <- da.otus %>%  pull(OTU)

# Remove objects
rm(list = c("corr.test_yield_ratio_SNS", "corr.test", "tab.otu", "da.otus", "estimates"))

```

# Check overlap of OTUs found to be DA by resisatance traits
```{r}
l.ald_phen <- list(da.otu_all_continuous_emerg = da.otu_all_continuous_emerg,
                   da.otu_all_continuous_RRI = da.otu_all_continuous_RRI,
                   da.otu_all_continuous_sdr = da.otu_all_continuous_sdr,
                   da.otu_all_continuous_syr = da.otu_all_continuous_syr)

upset(fromList(l.ald_phen), order.by = "freq", nsets = 6, nintersects = NA)

# Improve plot appearance
l.ald_phen_new <- list(Emergence = da.otu_all_continuous_emerg,
                       RRI = da.otu_all_continuous_RRI,
                       'SDW rel' = da.otu_all_continuous_sdr,
                       'tSDW rel' = da.otu_all_continuous_syr)

p.upset <- upset(fromList(l.ald_phen_new), order.by = "freq", nsets = 6, 
                 nintersects = NA,
                 keep.order = TRUE,
                 sets.x.label = "Number of da fOTUs",
                 point.size = 2.5,
                 text.scale = c(1.3, 1, 1.15, 1, 1.3, 1))
p.upset


# and with ggupset
# Create interactions matrix
OTU_names <- unique(unlist(l.ald_phen))
mat <- sapply(l.ald_phen, "%in%", x = OTU_names)  ## matrix output
tab.DA_intersect <- data.frame(mat) %>% 
  mutate(name = OTU_names) %>% select(name, everything())

tidy.DA_intersect <- tab.DA_intersect %>% 
  as_tibble() %>%
  rename("Emergence" = da.otu_all_continuous_emerg,
         "RRI" = da.otu_all_continuous_RRI,
         'SDW rel' = da.otu_all_continuous_sdr,
         'tSDW rel' = da.otu_all_continuous_syr) %>% 
  pivot_longer(!name, names_to = "Phenotype", values_to = "present") %>%
  filter(present) %>%
  select(-present)

p.upset <- tidy.DA_intersect %>%
  group_by(name) %>%
  summarize(Phenotype = list(Phenotype)) %>%
  ggplot(aes(x = Phenotype)) +
  geom_bar() +
  geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -1) +
  scale_x_upset(n_intersections = 20, scale_name = "discrete") +
  scale_y_continuous(name = "Intersection size",
                     expand = expansion(mult = c(0, 0.1))) +
  xlab(NULL) +
  ggtitle("Fungi")

p.upset

p <- plot_grid(p.upset, labels = "(a)")

# Save plot object
saveRDS(p, here("Data", "Interim", "Figures", "UpsetR_fungi.rds"))

# Check intersect
tab.DA_intersect %>% 
  filter(da.otu_all_continuous_emerg == 1 &
           da.otu_all_continuous_RRI == 1 &
           da.otu_all_continuous_sdr == 1 &
           da.otu_all_continuous_syr == 1) %>% pull(name)

# Check if they contain the most descriptive OTUs from Michael
v.da_interstect_all <- tab.DA_intersect %>% 
  filter(da.otu_all_continuous_emerg == 1 &
           da.otu_all_continuous_RRI == 1 &
           da.otu_all_continuous_sdr == 1 &
           da.otu_all_continuous_syr == 1) %>% pull(name)

# Specific yield only
tab.otu_da_syr <- tab.DA_intersect %>% 
  filter(da.otu_all_continuous_emerg    == 0 &
           da.otu_all_continuous_RRI == 0 &
           da.otu_all_continuous_sdr == 0 &
           da.otu_all_continuous_syr == 1) %>% pull(name) 

tab.da_otu_all_continuous_syr %>% filter(OTU %in% tab.otu_da_syr)

# RRI only
tab.otu_da_rri <- tab.DA_intersect %>% 
  filter(da.otu_all_continuous_emerg    == 0 &
           da.otu_all_continuous_RRI == 1 &
           da.otu_all_continuous_sdr == 0 &
           da.otu_all_continuous_syr == 0) %>% pull(name) 

tab.da_otu_all_continuous_RRI %>% filter(OTU %in% tab.otu_da_rri)


# look at Glomeromycota
tab.da_otu_all_continuous_RRI %>% filter(OTU == "fOTU1020") %>% select(c(1, 5, 7))
tab.DA_intersect %>% filter(OTU_names == "fOTU1020")


# Save intersection OTUs (all phenotypes)
saveRDS(v.da_interstect_all,
        here("Data", "Interim", "DA_fun_OTUs_intersect_all_phenotypes.rds"))


# Save list of da OTUs
saveRDS(l.ald_phen,
        here("Data", "Interim", "List_DA_fun_OTUs_compare_phenotypes.rds"))


rm(list = c("l.ald_phen", "tab.otu_da_syr", "mat", "tab.DA_intersect", "OTU_names"))

```

## Plot heatmap for daOTUs (intersect of all resistance phenotypes)
```{r}
load(here("Data", "Interim", "phy.fun_red.RData"))

# Subset da analysis output from  emergence (continuous)
v.da_int_all <- tab.da_otu_all_continuous_emerg %>% 
  filter(OTU %in% v.da_interstect_all)

# Add taxonomy
v.da_int_all <- left_join(v.da_int_all,
                          tax_table(phy.fun.all)[v.da_int_all$OTU] %>%
                            data.frame() %>%
                            rownames_to_column("OTU"))

# Check output
dim(v.da_int_all)[1] # number of DA OTUs
n_neg <- v.da_int_all[v.da_int_all$spearman.erho < 0, "OTU"] %>% length(); n_neg # number of "negative" OTUs
v.da_int_all %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_min(order_by = spearman.erho, n = 10)
n_pos <- v.da_int_all[v.da_int_all$spearman.erho > 0, "OTU"] %>% length(); n_pos # number of "positive" OTUs
v.da_int_all %>% select("OTU", "spearman.erho", "spearman.eBH", "Phylum",
                   "Family", "Genus") %>%  slice_max(order_by = spearman.erho, n = 10)


sample_data(phy.fun_red)$Emergence <- sample_data(phy.fun_red)$emergence %>% 
  round(.) %>% 
  as.factor(.)


##label without overlap
label_emergence <- phy.fun_red %>% sample_data() %>% data.frame() %>% arrange(emergence) %>% 
  pull(Emergence) %>% data.frame(x = ., y = 1:length(.)) %>% 
  mutate(lab = case_when(
    y %% 2 == 0 ~ x,
    TRUE ~ "")) %>% pull(lab)

# Add significance level
phy.fun_red_red <- prune_taxa(v.da_int_all$OTU, phy.fun_red) 

OTU_fun_red_red <- phy.fun_red_red %>% otu_table() %>% data.frame()
OTU_fun_red_red

v.da_int_all_new <- v.da_int_all[match(OTU_fun_red_red %>% rownames(), v.da_int_all$OTU), ]
v.da_int_all_new$OTU==OTU_fun_red_red %>% rownames()

OTU_sig <- v.da_int_all_new %>%
    mutate(sig = case_when(spearman.eBH <= 0.001 ~ "***",
                           spearman.eBH <= 0.01 ~  "**",
                           spearman.eBH <= 0.05 ~  "*"),
           OTU_sig = paste0(OTU, sig))

taxa_names(phy.fun_red_red) <- pull(OTU_sig)

# arrange
sort <- OTU_sig[match(v.da_int_all$OTU, OTU_sig$OTU), ] %>% pull(OTU_sig)

p <- plot_heatmap(phy.fun_red_red, 
             taxa.order = sort, max.label = 260,
             sample.order = "emergence", sample.label = "Emergence",
             "low" = "lightblue", "high" = "darkblue", na.value = "white", 
             trans = scales::log_trans(2)) +
  scale_x_discrete("Genotype (ordered by emergence level)",
    labels = label_emergence) +
  ylab("OTU (ordered by correlation coefficient)")+
  theme(axis.ticks.x = element_blank(),
        axis.text.x = element_text(size = 3, angle = 0, vjust = 7.5),
        axis.text.y = element_text(size = 6.7),
        legend.position = "top",
        legend.key.width = unit(1.5, "cm"),
        plot.margin = margin(unit(c(5.5, 15, 5.5, 11), "points"))
        )


# Indicate direction of correlation
p_ <- p + geom_hline(aes(yintercept = n_neg + 0.5)) +   
annotate("text", x = 258, y = n_neg + n_pos/2, label = "Positive", angle = -90, size = 3.5) +   
annotate("text", x = 258, y = n_neg/2, label = "Negative", angle = -90, size = 3.5) +   
coord_cartesian(xlim = c(NA, 252), clip = "off")

p_

# Remove legend and add title
p_ <- p_ + theme(legend.position = "none") +
  ggtitle("Fungi")

# Add panel label and save
p_save <- plot_grid(p_, labels = "(c)")
saveRDS(p_save, here("Data", "Interim", "Figures", "Heatmap_genotype_fungi.rds"))

# Save legend
legend <- cowplot::get_plot_component(p, "guide-box", return_all = TRUE)
saveRDS(legend, here("Data", "Interim", "Figures", "Heatmap_genotype_fungi_legend.rds"))

rm(list = c("p", "p_", "p_save"))
```


# Save DA of different phenotypes 
```{r}
t.da_all <- tab.da_otu_all_continuous_emerg %>% select(OTU, spearman.erho, spearman.eBH) %>% 
  rename("spearman.erho_emergence" = spearman.erho, "spearman.eBH_emergence" = spearman.eBH) %>% 
  left_join(., tab.da_otu_all_continuous_RRI %>% select(OTU, spearman.erho, spearman.eBH) %>% 
  rename("spearman.erho_RRI" = spearman.erho, "spearman.eBH_RRI" = spearman.eBH)) %>% 
  left_join(., tab.da_otu_all_continuous_sdr %>% select(OTU, spearman.erho, spearman.eBH) %>% 
  rename("spearman.erho_sdr" = spearman.erho, "spearman.eBH_sdr" = spearman.eBH)) %>% 
  left_join(., tab.da_otu_all_continuous_syr %>% select(OTU, spearman.erho, spearman.eBH) %>% 
  rename("spearman.erho_syr" = spearman.erho, "spearman.eBH_syr" = spearman.eBH))

write.csv(t.da_all, row.names = FALSE,
          file = here("Data", "Interim", "da_otu_fun.csv"))

```


```{r}

```

